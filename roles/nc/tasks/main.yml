---
- name: set tuned profile
  action: command tuned-adm profile enterprise-storage

- name: Install the NC packages
  action: yum name=eucalyptus-nc state=latest enablerepo=eucalyptus-release,euca2ools-release,elrepo,epel,base,updates
  notify: 
    - start nc
  when: not nightlies 

- name: Install the NC packages
  action: yum name=eucalyptus-nc state=latest enablerepo=eucalyptus-nightly,euca2ools-release,elrepo,epel,base,updates
  notify: 
    - start nc
  when: nightlies 

#    - name: checking existing networking configuration
#      action: shell /sbin/ifconfig {{ bridge }}
#      register: bridge_exists
#      ignore_errors: true
  
#    - name: check for existing of bridge
#      set_fact: canihazbridge="true"
#      when: ansible_{{ bridge }} is set 

- name: template the interface file
  action: template src=ifconfig_bridge_interface.j2 dest=/etc/sysconfig/network-scripts/ifcfg-{{ bridge_iface }}
  when: ansible_{{ bridge }} is undefined
#    - name: template the interface file
#      action: template src=ifconfig_bridge_interface.j2 dest=/etc/sysconfig/network-scripts/ifcfg-{{ bridge_iface }}
#      when: bridge_exists.rc == 1
                            
- name: template the bridge interface file
  action: template src=ifconfig_bridge_{{ bridge_type }}.j2 dest=/etc/sysconfig/network-scripts/ifcfg-{{ bridge }}
  when: ansible_{{ bridge }} is undefined
#    - name: template the bridge interface file
#      action: template src=ifconfig_bridge_{{ bridge_type }}.j2 dest=/etc/sysconfig/network-scripts/ifcfg-{{ bridge }}
#      when: bridge_exists.rc == 1

- name: explicitly restart networking services
  action: service name=network state=restarted

- name: Get facts update to reflect new networking
  action: setup
                                                            
- name: Template the configuration file
  action: template src=../../common/templates/eucalyptus.conf.j2 dest=/etc/eucalyptus/eucalyptus.conf
  notify: 
    - restart nc

- name: modprobe kvm modules
  action: shell /sbin/modprobe kvm_intel
  when: hypervisor == "kvm"
  register: kvm_loaded
                                                                        
- name: Fail on lack of VT
  action: fail msg="VT is not enabled on this system, please enable it in the system BIOS before proceeding."
  when: kvm_loaded.rc == 1

#    - name: Check for default libvirt virbr0
#      action: shell /usr/bin/virsh net-info default
#      ignore_errors: true
#      register: default_exists

- name: Remove virbr0
  action: command virsh {{ item }} default
  when: ansible_interfaces['virbr0'] is defined 
  with_items:
  - net-destroy
  - net-undefine
  notify: 
  - restart libvirt
